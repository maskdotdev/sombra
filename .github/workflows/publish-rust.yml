name: Publish Rust Crate

# This is a reusable workflow that can be called in two ways:
# 1. Automatically by release-please.yml when a Rust release is created
# 2. Manually via release creation events (fallback)
#
# The primary trigger is workflow_call from release-please.

on:
  workflow_call:
    inputs:
      tag:
        description: 'Git tag to publish (e.g., sombra-v0.4.3)'
        required: true
        type: string
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: true
  release:
    types: [created]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug workflow inputs
        run: |
          echo "=== Workflow Debug Info ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Tag input: ${{ inputs.tag }}"
          echo "inputs.tag != '': ${{ inputs.tag != '' }}"
          echo "Event name == 'workflow_call': ${{ github.event_name == 'workflow_call' }}"
          echo "startsWith(github.event.release.tag_name, 'sombra-v'): ${{ startsWith(github.event.release.tag_name, 'sombra-v') }}"
          echo "NEW Build condition: ${{ inputs.tag != '' || startsWith(github.event.release.tag_name, 'sombra-v') }}"
          echo "OLD Build condition: ${{ github.event_name == 'workflow_call' || startsWith(github.event.release.tag_name, 'sombra-v') }}"

  publish-crate:
    if: |
      inputs.tag != '' || 
      startsWith(github.event.release.tag_name, 'sombra-v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || github.ref }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Run tests
        run: cargo test --manifest-path packages/core/Cargo.toml --lib
      
      - name: Publish to crates.io
        run: cargo publish --manifest-path packages/core/Cargo.toml --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
