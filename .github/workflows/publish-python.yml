name: Publish Python Package

# This is a reusable workflow that can be called in two ways:
# 1. Automatically by release-please.yml when a Python release is created
# 2. Manually via release creation events (fallback)
#
# The primary trigger is workflow_call from release-please.

on:
  workflow_call:
    inputs:
      tag:
        description: 'Git tag to publish (e.g., sombrapy-v0.4.3)'
        required: true
        type: string
    secrets:
      PYPI_API_TOKEN:
        required: true
  release:
    types: [created]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug workflow inputs
        run: |
          echo "=== Workflow Debug Info ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Tag input: ${{ inputs.tag }}"
          echo "inputs.tag != '': ${{ inputs.tag != '' }}"
          echo "Event name == 'workflow_call': ${{ github.event_name == 'workflow_call' }}"
          echo "startsWith(github.event.release.tag_name, 'sombrapy-v'): ${{ startsWith(github.event.release.tag_name, 'sombrapy-v') }}"
          echo "NEW Build condition: ${{ inputs.tag != '' || startsWith(github.event.release.tag_name, 'sombrapy-v') }}"
          echo "OLD Build condition: ${{ github.event_name == 'workflow_call' || startsWith(github.event.release.tag_name, 'sombrapy-v') }}"

  build-wheels:
    if: |
      inputs.tag != '' || 
      startsWith(github.event.release.tag_name, 'sombrapy-v')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.12', '3.13', '3.14']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || github.ref }}
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build wheel
        run: |
          cd packages/python
          python -m pip install maturin
          python -m maturin build --release
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: packages/python/target/wheels/*.whl

  publish-pypi:
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: wheels
          pattern: wheel-*
      
      - name: Flatten wheels
        run: find wheels -name "*.whl" -exec cp {} . \;
      
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: .
